{"version":3,"sources":["MetricNode.js"],"names":[],"mappings":"AAAA,OAAO,MAAM,UAAN,CAAgB;AACnB,gBAAY,SAAZ,EAAuB,eAAvB,EAAuC;AACnC,aAAK,MAAL,GAAc,EAAd;AACA,aAAK,KAAL,GAAa,EAAb;AACA,aAAK,IAAL,GAAW,SAAX;AACA,aAAK,eAAL,GAAuB,eAAvB;AACH;;AAED,aAAQ;AACJ,eAAO,KAAK,MAAL,CAAY,KAAZ,MAAuB,KAAK,KAAL,CAAW,KAAX,EAA9B;AACH;;AAED,eAAW,WAAX,EAAwB,IAAxB,EAA6B;AACzB,YAAI,eAAe,IAAI,UAAJ,CAAe,KAAK,CAAL,CAAf,EAAwB,cAAY,GAAZ,GAAgB,KAAK,CAAL,CAAxC,CAAnB;AACA,YAAK,KAAK,MAAL,IAAe,CAApB,EAAwB;AACpB,iBAAK,KAAL,CAAW,IAAX,CAAgB,YAAhB;AACA;AACH,SAHD,MAII;AACA,gBAAI,QAAQ,CAAC,CAAb;AACA,gBAAI,IAAG,CAAP;AACA,mBAAO,IAAE,KAAK,MAAL,CAAY,MAArB,EAA6B,GAA7B,EAAiC;AAC7B,oBAAI,QAAQ,KAAK,MAAL,CAAY,CAAZ,CAAZ;AACA,oBAAG,aAAa,eAAb,KAAiC,MAAM,eAAvC,IAA0D,aAAa,IAAb,KAAsB,MAAM,IAAzF,EAA8F;AAC1F,4BAAQ,CAAR;AACA;AACH;AACJ;;AAED,gBAAK,SAAS,CAAC,CAAf,EAAmB;AACf,qBAAK,MAAL,CAAY,IAAZ,CAAiB,YAAjB;AACA,6BAAa,UAAb,CAAwB,aAAa,eAArC,EAAsD,KAAK,KAAL,CAAW,CAAX,EAAc,KAAK,MAAnB,CAAtD;AACH,aAHD,MAII;AACA,oBAAI,YAAY,KAAK,MAAL,CAAY,KAAZ,CAAhB;AACA,0BAAU,UAAV,CAAqB,aAAa,eAAlC,EAAmD,KAAK,KAAL,CAAW,CAAX,EAAc,KAAK,MAAnB,CAAnD;AACH;AACJ;AACJ;AAtCkB","file":"MetricNode-compiled.js","sourcesContent":["export class MetricNode{\n    constructor(nodeValue, incrementalPath){\n        this.childs = [];\n        this.leafs = [];\n        this.data =nodeValue;\n        this.incrementalPath = incrementalPath;\n    }\n\n    isLeaf(){\n        return this.childs.empty() && this.leafs.empty()\n    }\n\n    addElement(currentPath, list){\n        var currentChild = new MetricNode(list[0], currentPath+\".\"+list[0]);\n        if ( list.length == 1 ) {\n            this.leafs.push(currentChild);\n            return;\n        }\n        else{\n            var index = -1;\n            var i =0;\n            for( ; i<this.childs.length; i++){\n                var child = this.childs[i];\n                if(currentChild.incrementalPath === child.incrementalPath && currentChild.data === child.data){\n                    index = i;\n                    break;\n                }\n            }\n\n            if ( index == -1 ) {\n                this.childs.push(currentChild);\n                currentChild.addElement(currentChild.incrementalPath, list.slice(1, list.length));\n            }\n            else{\n                var nextChild = this.childs[index];\n                nextChild.addElement(currentChild.incrementalPath, list.slice(1, list.length));\n            }\n        }\n    }\n}\n"]}